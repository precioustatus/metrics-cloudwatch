////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Identifiers

group = 'com.precioustatus'
version = '0.3.5-SNAPSHOT'

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Plugins

apply plugin: 'java'
sourceCompatibility = 1.8
targetCompatibility = 1.8
apply plugin: 'maven'

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Defines

/** Function always returns a new manifest that can be customized */
def defaultManifest() {
    return manifest {
        def git_cmd = "git rev-parse HEAD"
        def git_proc = git_cmd.execute()
        attributes 'SCM-Revision': git_proc.text.trim()
        attributes 'Timestamp': String.valueOf(System.currentTimeMillis())
        attributes 'Build-Host': InetAddress.localHost.hostName
    }
}

def defaultBlank(closure) {
    try {
        closure()
    } catch (MissingPropertyException e) {
        ''
    }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Dependencies

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.amazonaws:aws-java-sdk-cloudwatch:1.10.19'
    compile 'io.dropwizard.metrics:metrics-core:3.1.2'

    compile 'org.apache.commons:commons-lang3:3.3.2'
    compile 'com.google.guava:guava:18.0'
    compile 'org.slf4j:slf4j-api:1.7.10'

    testCompile 'junit:junit:4.12'
    testCompile 'org.slf4j:slf4j-simple:1.7.10'
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Artifacts

jar {
    manifest = defaultManifest()
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
    manifest = defaultManifest()
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
    manifest = defaultManifest()
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Publishing
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: RELEASE_REPO_URL) {
                authentication(userName: ARTIFACTORY_USER, password: ARTIFACTORY_PASSWORD)
            }

            snapshotRepository(url: SNAPSHOT_REPO_URL) {
                authentication(userName: ARTIFACTORY_USER, password: ARTIFACTORY_PASSWORD)
            }

            mavenLocal()
        }
    }
}


